/*** builtin.c ****************************************************************
** 
** This file is part of BibTool.
** It is distributed under the GNU General Public License.
** See the file COPYING for details.
** 
** (c) 2015-2016 Gerd Neugebauer
** 
** Net: gene@gerd-neugebauer.de
** 
******************************************************************************/

Bind(	 "=",			     g_setq,		L_SET		     )
Bind(	 "==",			     g_eq,		L_EQ		     )
Bind(	 "!=",			     g_ne,		L_NE		     )
Bind(	 "<=",			     NULL,		L_LE		     )
Bind(	 "<",			     g_lt,		L_LT		     )
Bind(	 ">=",			     NULL,		L_GE		     )
Bind(	 ">",			     NULL,		L_GT		     )
Bind(	 "+",			     g_plus,		L_PLUS		     )
Bind(	 "-",			     g_minus,		L_MINUS		     )
Bind(	 "*",			     g_times,		L_TIMES		     )
Bind(	 "/",			     g_div,		L_DIV		     )
Bind(	 "%",			     g_mod,		L_MOD		     )
Bind(	 "'",			     NULL,		L_QUOTE		     )
Bind(	 "&&",			     g_and,		L_AND		     )
Bind(	 "||",			     g_or,		L_OR		     )
Bind(	 "!",			     g_not,		L_NOT		     )
Bind(	 "`",			     NULL,		L_FIELD		     )
BindFct( "add.field",		     g_add_field,	add_field(val)	     )
BindBool("apply.alias",		     g_apply_alias,	rsc_apply_alias	     )
BindBool("apply.modify",	     g_apply_modify,	rsc_apply_modify     )
BindBool("apply.include",	     g_apply_include,	rsc_apply_include    )
Bind(	 "and",			     g_and,		L_AND		     )
BindStr( "bibtex.env.name",	     g_e_bibtex,	rsc_e_bibtex	     )
BindStr( "bibtex.search.path",	     g_v_bibtex,	rsc_v_bibtex	     )
BindBool("check.double",	     g_double_check,	rsc_double_check     )
BindBool("check.double.delete",	     g_del_dbl,		rsc_del_dbl	     )
BindFct( "check.rule",		     g_check_rule,	add_check_rule(val)  )
BindBool("check.case.sensitive",     g_case_check,	rsc_case_check	     )
Bind(    "clear.ignored.words",	     g_cl_ign_words,	L_FIELD		     )
BindBool("count.all",		     g_count_all,	rsc_cnt_all	     )
BindBool("count.used",		     g_count_used,	rsc_cnt_used	     )
BindNum( "crossref.limit",	     g_xref_limit,	rsc_xref_limit	     )
BindFct( "default.key",		     g_def_key,		set_separator(0,val) )
BindFct( "delete.field",	     g_del_f,		add_rewrite_rule(val))
BindStr( "dir.file.separator",	     g_dir_file_sep,	rsc_dir_file_sep     )
BindBool("dump.symbols",	     g_dump_symbols,	rsc_dump_symbols     )
BindStr( "env.separator",	     g_env_sep,		rsc_env_sep	     )
BindFct( "extract.file",	     g_extr_file,	read_aux(val,save_input_file,FALSE) )
BindFct( "extract.regex",	     g_extr_regex,	save_regex(val)	     )
BindBool("expand.macros",	     g_expand_macros,	rsc_expand_macros    )
BindBool("expand.crossref",	     g_expand_crossref, rsc_expand_crossref  )
BindSym( "false",		     sym_false				     )
BindFct( "fmt.inter.name",	     g_f_in,		set_separator(1,val) )
BindFct( "fmt.name.pre",	     g_f_n_p,		set_separator(2,val) )
BindFct( "fmt.name.name",	     g_f_n_n,		set_separator(3,val) )
BindFct( "fmt.name.title",	     g_f_n_t,		set_separator(4,val) )
BindFct( "fmt.title.title",	     g_f_t_t,		set_separator(5,val) )
BindFct( "fmt.et.al",		     g_f_etal,		set_separator(7,val) )
BindFct( "fmt.word.separator",	     g_f_w_sep,		add_word_sep(val)    )
BindFct( "field.type",		     g_fld_type,	set_symbol_type(val) )
Bind(	 "function",		     NULL,		L_FUNCTION	     )
Bind(	 "input",		     NULL,		L_FIELD		     )
Bind(	 "if",			     NULL,		L_IF		     )
BindFct( "ignored.word",	     g_ign_word,	add_ignored_word(val) )
Bind(	 "ilike",		     NULL,		L_ILIKE		     )
BindBool("key.generation",	     g_make_key,	rsc_make_key	     )
BindFct( "key.base",		     g_key_base,	set_base(val)	     )
BindFct( "key.format",		     g_key_fmt,		add_format((char*)val) )
BindBool("key.make.alias",	     g_make_alias,	rsc_make_alias	     )
BindFct( "key.number.separator",     g_key_num_sep,	set_separator(6,val) )
BindBool("key.expand.macros",	     g_key_expand_macs, rsc_key_expand_macros )
Bind(	 "like",		     NULL,		L_LIKE		     )
Bind(	 "macro.file",		     NULL,		L_FIELD		     )
Bind(	 "mod",			     g_mod,		L_MOD		     )
BindFct( "new.entry.type",	     g_entry_type,	def_entry_type(val)  )
BindFct( "new.field.type",	     g_field_type,	def_field_type(val)  )
BindFct( "new.format.type",	     g_fmt_type,	def_format_type(val) )
Bind(	 "not",			     g_not,		L_NOT		     )
Bind(	 "nil",			     g_self,		L_CONS		     )
Bind(	 "output.file",		     g_out_file,	L_FIELD		     )
Bind(	 "or",			     g_or,	        L_OR		     )
BindBool("pass.comments",	     g_pass_comments,	rsc_pass_comment     )
BindBool("preserve.key.case",	     g_key_case,	rsc_key_case	     )
BindBool("preserve.keys",	     g_preserve_keys,	rsc_key_preserve     )
Bind(	 "print",		     g_print,		L_FIELD		     )
BindNum( "print.align.string",	     g_col_s,		rsc_col_s	     )
BindNum( "print.align.comment",	     g_col_c,		rsc_col_c	     )
BindNum( "print.align.preamble",     g_col_p,		rsc_col_p	     )
BindNum( "print.align.key",	     g_col_key,		rsc_col_key	     )
BindNum( "print.align",		     g_col,		rsc_col		     )
BindBool("print.all.strings",	     g_all_macs,	rsc_all_macs	     )
BindStr( "print.entry.types",	     g_print_et,	rsc_print_et	     )
BindBool("print.equal.right",	     g_eq_right,	rsc_eq_right	     )
BindBool("print.braces",	     g_braces,		rsc_braces	     )
BindBool("print.comma.at.end",	     g_print_ce,	rsc_print_ce	     )
BindStr( "print.deleted.prefix" ,    g_del_pre,		rsc_del_pre	     )
BindBool("print.deleted.entries",    g_del_q_entries,	rsc_del_q	     )
BindNum( "print.indent",	     g_indent,		rsc_indent	     )
BindNum( "print.line.length",	     g_linelen,		rsc_linelen	     )
BindNum( "print.newline",	     g_newlines,	rsc_newlines	     )
BindBool("print.parentheses",	     g_parentheses,	rsc_parentheses	     )
BindBool("print.terminal.comma",     g_print_tc,	rsc_print_tc	     )
BindBool("print.use.tab",	     g_use_tabs,	rsc_use_tabs	     )
BindBool("print.wide.equal",	     g_print_we,	rsc_print_we	     )
Bind(	 "quote",		     NULL,		L_QUOTE		     )
BindBool("quiet",		     g_quiet,		rsc_quiet	     )
BindFct( "regexp.syntax",	     g_regex_syntax,	set_regex_syntax((char*)val) )
BindFct( "rename.field",	     g_rename_field,	rename_field(val)    )
Bind(	 "resource",		     NULL,		L_FIELD		     )
BindFct( "resource.search.path",     g_search_path,	set_rsc_path(val)    )
BindFct( "rewrite.rule",	     g_rewrite_rule,	add_rewrite_rule(val) )
BindBool("rewrite.case.sensitive",   g_case_rewrite,	rsc_case_rewrite     )
BindNum( "rewrite.limit",	     g_rewrite_limit,	rsc_rewrite_limit    )
BindFct( "select",		     g_select,		add_extract(val,TRUE,FALSE) )
BindFct( "select.by.string",	     g_sel_str,		add_extract(val,FALSE,FALSE) )
BindFct( "select.by.non.string",     g_sel_non,		add_extract(val,FALSE,TRUE) )
BindStr( "select.by.string.ignored", g_sel_ignored,	rsc_sel_ignored	     )
BindBool("select.case.sensitive",    g_case_select,	rsc_case_select	     )
BindStr( "select.fields",	     g_sel_fields,	rsc_sel_fields	     )
BindFct( "select.non",		     g_extract,		add_extract(val,TRUE,TRUE) )
BindBool("select.crossrefs",	     g_xref_select,	rsc_xref_select	     )
BindBool("sort",		     g_sort,		rsc_sort	     )
BindBool("sort.cased",		     g_sort_cased,	rsc_sort_cased	     )
BindBool("sort.macros",		     g_srt_macs,	rsc_srt_macs	     )
BindBool("sort.reverse",	     g_sort_reverse,	rsc_sort_reverse     )
BindFct( "sort.order",		     g_sort_order,	add_sort_order(val)  )
BindFct( "sort.format",		     g_sort_format,	add_sort_format((char*)val) )
BindBool("suppress.initial.newline", g_no_nl,		rsc_no_nl	     )
BindFct( "symbol.type",		     g_sym_type,	set_symbol_type(val) )
BindFct( "tex.define",		     g_tex_def,		TeX_def(val)	     )
BindSym( "true",		     sym_true				     )
BindBool("verbose",		     g_verbose,		rsc_verbose	     )
Bind(	 "version",		     g_version,		L_FIELD		     )
Bind(	 "while",		     NULL,		L_WHILE		     )
Bind(	 "with",		     NULL,		L_WITH		     )

/*---------------------------------------------------------------------------*/
